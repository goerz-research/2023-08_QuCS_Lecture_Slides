### MATPLOTLIBRC FORMAT

### LINES
# See http://matplotlib.org/api/artist_api.html#module-matplotlib.lines for more
# information on line properties.
lines.linewidth   : 1.5     # line width in points
lines.linestyle   : -       # solid line
lines.color       : ff1a1c  # has no affect on plot(); see axes.prop_cycle
lines.marker      : None    # the default marker
lines.markeredgewidth  : 1.0     # the line width around the marker symbol
lines.markersize  : 6            # markersize, in points
lines.dash_joinstyle : round        # miter|round|bevel
lines.dash_capstyle : butt          # butt|round|projecting
lines.solid_joinstyle : miter       # miter|round|bevel
lines.solid_capstyle : projecting   # butt|round|projecting
lines.antialiased : True         # render lines in antialiased (no jaggies)

# The three standard dash patterns.  These are scaled by the linewidth.
lines.dashed_pattern : 4, 1.5
lines.dashdot_pattern : 5,1,1,1
lines.dotted_pattern : 1, 1
lines.scale_dashes : True

markers.fillstyle: full # full|left|right|bottom|top|none

### FONT
#
# font properties used by text.Text.  See
# http://matplotlib.org/api/font_manager_api.html for more
# information on font properties.  The 6 font properties used for font
# matching are given below with their default values.
#
# The font.family property has five values: 'serif' (e.g., Times),
# 'sans-serif' (e.g., Helvetica), 'cursive' (e.g., Zapf-Chancery),
# 'fantasy' (e.g., Western), and 'monospace' (e.g., Courier).  Each of
# these font families has a default list of font names in decreasing
# order of priority associated with them.  When text.usetex is False,
# font.family may also be one or more concrete font names.
#
# The font.style property has three values: normal (or roman), italic
# or oblique.  The oblique style will be used for italic, if it is not
# present.
#
# The font.variant property has two values: normal or small-caps.  For
# TrueType fonts, which are scalable fonts, small-caps is equivalent
# to using a font size of 'smaller', or about 83%% of the current font
# size.
#
# The font.weight property has effectively 13 values: normal, bold,
# bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
# 400, and bold is 700.  bolder and lighter are relative values with
# respect to the current weight.
#
# The font.stretch property has 11 values: ultra-condensed,
# extra-condensed, condensed, semi-condensed, normal, semi-expanded,
# expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
# property is not currently implemented.
#
# The font.size property is the default font size for text, given in pts.
# 10 pt is the standard value.
#
font.family         : sans-serif  # for sans-serif, switch to 'sans-serif'
font.style          : normal
font.variant        : normal
font.weight         : medium
font.stretch        : normal
# note that font.size controls default text sizes.  To configure
# special text sizes tick labels, axes, labels, title, etc, see the rc
# settings for axes and ticks. Special text sizes can be defined
# relative to font.size, using the following values: xx-small, x-small,
# small, medium, large, x-large, xx-large, larger, or smaller
font.size          : 6
#font.serif         : Computer Modern Roman, Times, Palatino, New Century Schoolbook, Bookman
#font.sans-serif    : Computer Modern Sans serif, Helvetica, Avant Garde
#font.cursive       : Zapf Chancery
#font.monospace     : Computer Modern Typewriter, Courier
#font.fantasy        : Comic Sans MS, Chicago, Charcoal, Impact, Western, Humor Sans, xkcd, fantasy

### LaTeX customizations. See http://wiki.scipy.org/Cookbook/Matplotlib/UsingTex

text.usetex         : False   # use latex for all text handling. The following fonts
                             # are supported through the usual rc parameter settings:
                             # new century schoolbook, bookman, times, palatino,
                             # zapf chancery, charter, serif, sans-serif, helvetica,
                             # avant garde, courier, monospace, computer modern roman,
                             # computer modern sans serif, computer modern typewriter
                             # If another font is desired which can loaded using the
                             # LaTeX \usepackage command, please inquire at the
                             # matplotlib mailing list
#text.latex.unicode : False # use "ucs" and "inputenc" LaTeX packages for handling
                            # unicode strings.
text.latex.preamble : \usepackage{braket},\usepackage{amssymb},\usepackage{amsmath},\usepackage{amsfonts},\usepackage{amsthm},\renewcommand{\Re}{\text{Re}},\renewcommand{\Im}{\text{Im}}
# for sans-serif, prepend '\usepackage{cmbright}'

#text.antialiased : True # If True (default), the text will be antialiased.
                         # This only affects the Agg backend.

# The following settings allow you to select the fonts in math mode.
# They map from a TeX font name to a fontconfig font pattern.
# These settings are only used if mathtext.fontset is 'custom'.
# Note that this "custom" mode is unsupported and may go away in the
# future.
#mathtext.cal : cursive
#mathtext.rm  : serif
#mathtext.tt  : monospace
#mathtext.it  : serif:italic
#mathtext.bf  : serif:bold
#mathtext.sf  : sans
#mathtext.fontset : dejavusans # Should be 'dejavusans' (default),
                               # 'dejavuserif', 'cm' (Computer Modern), 'stix',
                               # 'stixsans' or 'custom'
#mathtext.fallback_to_cm : True  # When True, use symbols from the Computer Modern
                                 # fonts when a symbol can not be found in one of
                                 # the custom math fonts.

#mathtext.default : it # The default font to use for math.
                       # Can be any of the LaTeX font names, including
                       # the special name "regular" for the same font
                       # used in regular text.

### AXES
# default face and edge color, default tick sizes,
# default fontsizes for ticklabels, and so on.  See
# http://matplotlib.org/api/axes_api.html#module-matplotlib.axes

axes.facecolor      : white   # axes background color
axes.edgecolor      : black   # axes edge color
axes.linewidth      : 1.0     # edge linewidth
axes.grid           : False   # display grid or not
axes.titlesize      : medium  # fontsize of the axes title
axes.labelsize      : medium  # fontsize of the x any y labels
axes.labelweight    : normal  # weight of the x and y labels
axes.labelpad       : 2.0     # space between label and axis
axes.labelcolor     : black
axes.axisbelow      : False   # draw axis gridlines and ticks below
                              # patches (True); above patches but below
                              # lines ('line'); or above all (False)

axes.formatter.limits : -5, 5 # use scientific notation if log10
                              # of the axis range is smaller than the
                              # first or larger than the second
axes.formatter.use_locale : False # When True, format tick labels
                                  # according to the user's locale.
                                  # For example, use ',' as a decimal
                                  # separator in the fr_FR locale.
axes.formatter.use_mathtext : False # When True, use mathtext for scientific
                                    # notation.
                                    # notation.
axes.formatter.useoffset      : False   # If True, the tick label formatter
                                        # will default to labeling ticks relative
                                        # to an offset when the data range is
                                        # small compared to the minimum absolute
                                        # value of the data.
#axes.formatter.offset_threshold : 4     # When useoffset is True, the offset
                                         # will be used when it can remove
                                         # at least this number of significant
                                         # digits from tick labels.

# axes.spines.left   : True   # display axis spines
# axes.spines.bottom : True
# axes.spines.top    : True
# axes.spines.right  : True


#axes.unicode_minus  : True    # use unicode for the minus symbol
                               # rather than hyphen.  See
                               # http://en.wikipedia.org/wiki/Plus_and_minus_signs#Character_codes

axes.prop_cycle : cycler('color', ['377eb8', 'ff7f00', 'e41a1c', '4daf4a', '984ea3', 'a65628', 'f781bf', 'd2d215', 'fb9a99', 'a6cee3', 'fdbf6f', 'b2df8a', 'cab2d6'])

#axes.autolimit_mode : data # How to scale axes limits to the data.
                            # Use "data" to use data limits, plus some margin
                            # Use "round_number" move to the nearest "round" number
axes.xmargin        : 0  # x margin.  See `axes.Axes.margins`
axes.ymargin        : 0  # y margin See `axes.Axes.margins`

polaraxes.grid      : True    # display grid on polar axes
axes3d.grid         : True    # display grid on 3d axes


### TICKS
# see http://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.top            : False   # draw ticks on the top side
xtick.bottom         : True   # draw ticks on the bottom side
xtick.major.size     : 4.0      # major tick size in points
xtick.minor.size     : 2      # minor tick size in points
xtick.major.width    : 0.5    # major tick width in points
xtick.minor.width    : 0.5    # minor tick width in points
xtick.major.pad      : 2.0      # distance to major tick label in points
xtick.minor.pad      : 2.0      # distance to the minor tick label in points
xtick.color          : k      # color of the tick labels
xtick.labelsize      : medium # fontsize of the tick labels
xtick.direction      : in     # direction: in, out, or inout
xtick.minor.visible  : True  # visibility of minor ticks on x-axis
xtick.major.top      : True   # draw x axis top major ticks
xtick.major.bottom   : True   # draw x axis bottom major ticks
xtick.minor.top      : True   # draw x axis top minor ticks
xtick.minor.bottom   : True   # draw x axis bottom minor ticks

ytick.left           : True   # draw ticks on the left side
ytick.right          : True  # draw ticks on the right side
ytick.major.size     : 4.0      # major tick size in points
ytick.minor.size     : 2      # minor tick size in points
ytick.major.width    : 0.5    # major tick width in points
ytick.minor.width    : 0.5    # minor tick width in points
ytick.major.pad      : 2.0      # distance to major tick label in points
ytick.minor.pad      : 2.0      # distance to the minor tick label in points
ytick.color          : k      # color of the tick labels
ytick.labelsize      : medium # fontsize of the tick labels
ytick.direction      : in   # direction: in, out, or inout
ytick.minor.visible  : True  # visibility of minor ticks on y-axis
ytick.major.left     : True   # draw y axis left major ticks
ytick.major.right    : True   # draw y axis right major ticks
ytick.minor.left     : True   # draw y axis left minor ticks
ytick.minor.right    : True   # draw y axis right minor ticks


### GRIDS
grid.color       :   b0b0b0    # grid color
grid.linestyle   :   -         # solid
grid.linewidth   :   0.5       # in points
grid.alpha       :   1.0       # transparency, between 0.0 and 1.0

### Legend
legend.loc           : best
legend.frameon       : True     # if True, draw the legend on a background patch
legend.framealpha    : 1.0      # legend patch transparency
legend.facecolor     : white    # inherit from axes.facecolor; or color spec
legend.edgecolor     : white    # background patch boundary color
legend.fancybox      : True     # if True, use a rounded box for the
                                # legend background, else a rectangle
legend.shadow        : False    # if True, give background a shadow effect
legend.numpoints     : 2        # the number of marker points in the legend line
legend.scatterpoints : 3        # number of scatter points
legend.markerscale   : 1.0      # the relative size of legend markers vs. original
legend.fontsize      : medium
# Dimensions as fraction of fontsize:
legend.borderpad     : 0.4      # border whitespace
legend.labelspacing  : 1.0      # the vertical space between the legend entries
legend.handlelength  : 3.0      # the length of the legend lines
legend.handleheight  : 0.7      # the height of the legend handle
legend.handletextpad : 1.0      # the space between the legend line and legend text
legend.borderaxespad : 0.5      # the border between the axes and legend edge
legend.columnspacing : 1.5      # column separation

### FIGURE
# See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
figure.titlesize : large      # size of the figure title (Figure.suptitle())
figure.titleweight : normal   # weight of the figure title
figure.figsize   : 3.35, 1.57  # figure size in inches
figure.dpi       : 150      # figure dots per inch (for display)
figure.facecolor : white   # figure facecolor; 0.75 is scalar gray
figure.edgecolor : white   # figure edgecolor
figure.autolayout : False  # When True, automatically adjust subplot
                           # parameters to make the plot fit the figure


### IMAGES
image.aspect : equal             # equal | auto | a number
image.interpolation  : bilinear  # see help(imshow) for options
image.cmap   : magma_r          # A colormap name, gray etc...
image.lut    : 256               # the size of the colormap lookup table
image.origin : upper             # lower | upper
image.resample  : False
image.composite_image : True     # When True, all the images on a set of axes are
                                 # combined into a single composite image before
                                 # saving a figure as a vector graphics file,
                                 # such as a PDF.

### CONTOUR PLOTS
contour.negative_linestyle : dashed # dashed | solid
contour.corner_mask        : True   # True | False | legacy

### ERRORBAR PLOTS
errorbar.capsize : 0             # length of end cap on error bars in pixels

### HISTOGRAM PLOTS
hist.bins : auto                 # The default number of histogram bins.
                                 # If Numpy 1.11 or later is
                                 # installed, may also be `auto`

### SCATTER PLOTS
scatter.marker : o               # The default marker type for scatter plots.

### SAVING FIGURES
path.simplify : True   # When True, simplify paths by removing "invisible"
                       # points to reduce file size and increase rendering
                       # speed
path.simplify_threshold : 0.1  # The threshold of similarity below which
                               # vertices will be removed in the simplification
                               # process
path.snap : True # When True, rectilinear axis-aligned paths will be snapped to
                 # the nearest pixel when certain criteria are met.  When False,
                 # paths will never be snapped.
path.sketch : None # May be none, or a 3-tuple of the form (scale, length,
                   # randomness).
                   # *scale* is the amplitude of the wiggle
                   # perpendicular to the line (in pixels).  *length*
                   # is the length of the wiggle along the line (in
                   # pixels).  *randomness* is the factor by which
                   # the length is randomly scaled.

# the default savefig params can be different from the display params
# e.g., you may want a higher resolution, or to make the figure
# background white
savefig.dpi         : 300   # figure dots per inch or 'figure'
savefig.facecolor   : white    # figure facecolor when saving
savefig.edgecolor   : white    # figure edgecolor when saving
savefig.format      : png      # png, ps, pdf, svg
savefig.bbox        : standard # 'tight' or 'standard'.
                               # 'tight' is incompatible with pipe-based animation
                               # backends but will workd with temporary file based ones:
                               # e.g. setting animation.writer to ffmpeg will not work,
                               # use ffmpeg_file instead
savefig.pad_inches  : 0.0      # Padding to be used when bbox is set to 'tight'
savefig.transparent : True     # setting that controls whether figures are saved with a
                               # transparent background by default

# pdf backend params
#pdf.compression   : 6 # integer from 0 to 9
                       # 0 disables compression (good for debugging)
#pdf.fonttype       : 3         # Output Type 3 (Type3) or Type 42 (TrueType)

